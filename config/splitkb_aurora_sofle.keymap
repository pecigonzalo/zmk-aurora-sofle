#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |

            bindings = <
&kp GRAVE       &kp N1      &kp N2      &kp N3       &kp N4        &kp N5                                         &kp N6   &kp N7        &kp N8       &kp N9      &kp N0    &kp BACKSPACE
&kp TAB         &kp Q       &kp W       &kp E        &kp R         &kp T                                          &kp Y    &kp U         &kp I        &kp O       &kp P     &kp NON_US_BACKSLASH
&mt LCTRL ESC   &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHIFT F  &kp G                                          &kp H    &mt RSHIFT J  &mt RCTRL K  &mt RALT L  &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z       &kp X       &kp C        &kp V         &kp B      &rgb_ug RGB_TOG    &rgb_ug RGB_EFF  &kp N    &kp M         &kp COMMA    &kp DOT     &kp FSLH  &kp RSHFT
                            &kp LCTRL   &kp LALT     &kp LGUI      &kp SPACE  &kp SPACE          &kp RET          &kp RET  &kp BSPC      &kp RGUI     &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans                    &trans  &trans             &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans                    &trans  &trans             &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp LEFT_BRACKET  &trans                    &trans  &kt RIGHT_BRACKET  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans  &trans  &trans             &trans  &trans  &trans  &trans
                &trans  &trans  &trans            &trans  &trans    &trans  &trans  &trans             &trans  &trans
            >;
        };
    };
};
